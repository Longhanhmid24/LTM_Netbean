package com.app.chatserver.group_message;

import com.app.chatserver.message.ChatService; // ‚úÖ S·ª¨A: Import ChatService
// import com.app.chatserver.message.dto.MessageReceiveDTO; // (Kh√¥ng d√πng DTO n·ªØa)
import com.app.chatserver.model.GroupMessage; // ‚úÖ S·ª¨A: D√πng Model n√†y
import org.springframework.messaging.handler.annotation.MessageMapping;
import org.springframework.messaging.simp.SimpMessagingTemplate;
import org.springframework.stereotype.Controller;
import java.util.Map;

@Controller
public class GroupMessageController {

    private final SimpMessagingTemplate messagingTemplate;
    private final ChatService chatService;

    public GroupMessageController(SimpMessagingTemplate messagingTemplate, ChatService chatService) {
        this.messagingTemplate = messagingTemplate;
        this.chatService = chatService;
    }

    /**
     * ‚úÖ S·ª¨A ƒê·ªîI: Nh·∫≠n GroupMessage (L·ªõp 1) thay v√¨ DTO L·ªõp 2
     */
    @MessageMapping("/group.send")
    public void sendGroupMessage(GroupMessage message) {
        System.out.println("üì® Nh·∫≠n tin nh·∫Øn nh√≥m (L·ªõp 1) t·ª´ client: " + message.getSenderId());
        
        if (message.getGroupId() <= 0) {
             System.err.println("[GroupMessageController] B·ªè qua tin nh·∫Øn nh√≥m kh√¥ng c√≥ GroupId");
             return;
        }
        
        // 1. L∆∞u DB (d√πng h√†m L·ªõp 1)
        GroupMessage savedMessage = chatService.saveGroupMessage_Lop1(message);

        if (savedMessage == null) {
            System.err.println("[GroupMessageController] L·ªói khi l∆∞u tin nh·∫Øn nh√≥m (L·ªõp 1).");
            return;
        }

        // 2. G·ª≠i t·ªõi t·∫•t c·∫£ ng∆∞·ªùi trong nh√≥m qua /topic/group/{groupId}
        messagingTemplate.convertAndSend(
            "/topic/group/" + message.getGroupId(),
            savedMessage // G·ª≠i l·∫°i model GroupMessage (ƒë√£ c√≥ ID v√† timestamp)
        );

        System.out.println("üì§ ƒê√£ g·ª≠i broadcast (L·ªõp 1) t·ªõi /topic/group/" + message.getGroupId());
    }
}